import os, time, re

import praw

from pcpp import PCPartPickerList


class PCPPHelperBot:
    
    def __init__(self):
        username = os.environ.get('REDDIT_USERNAME')
        password = os.environ.get('REDDIT_PASSWORD')
        client_id = os.environ.get('CLIENT_ID')
        secret = os.environ.get('CLIENT_SECRET')
        
        version = 0.1
        user_agent = f"web:pcpp-helper-bot:v{version} (by u/pcpp-helper-bot)"
        
        self.reddit = praw.Reddit(user_agent=user_agent,
                                  client_id=client_id, client_secret=secret,
                                  username=username, password=password)
        
        # Only look at submissions with one of these flairs
        self.pertinent_flairs = ["Build Complete", "Build Upgrade",
                                 "Build Help", "Build Ready"]
    
    def monitor_subreddit(self, subreddit_name):
        subreddit = self.reddit.subreddit(subreddit_name)
        
        for submission in subreddit.stream.submissions():
            flair = submission.link_flair_text
            
            if flair and flair in self.pertinent_flairs and submission.is_self:
                self.parse_submission(submission)
    
    def parse_submission(self, submission):
        pcpp_url = self.detect_pcpp_elements(submission.selftext)
        
        if pcpp_url:
            print(f"Had url {pcpp_url} from {submission.title}")
            print(submission.selftext)
            print()
            print("END SUBMISSION")
            print()
        else:
            print(f"No url, or had table from {submission.title}")
    
    def detect_pcpp_elements(self, text):
        has_table = re.search(r"(Generated by \[PCPartPicker\])", text)
        pcpp_url = re.search(r"\((https://pcpartpicker.com/list/\w+)\)", text)
        
        if not has_table and pcpp_url:
            return pcpp_url.group(1)
        else:
            return None
