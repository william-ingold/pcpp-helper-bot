import re

from bs4 import BeautifulSoup

# Set of Regular Expressions used for searching posts
anon_list_pat = r'https://(\w+\.)?pcpartpicker\.com/list/\w+'
identifiable_list_pat = r'https://(\w+\.)?pcpartpicker\.com/user/.+'
anon_re = re.compile(anon_list_pat)
iden_re = re.compile(identifiable_list_pat)
footer_re = re.compile(r'(Total)|(Generated by)')

    
def pcpp_table_header(tag: BeautifulSoup):
    """Find table headers that match one generated by PCPP."""
    return tag.name == 'thead' and tag.text.strip() == 'Type\nItem\nPrice'
    
    
def detect_pcpp_html_elements(text: str):
    """Detects PCPP HTML elements in the provided text.
    
    Args:
        text (str): HTML text to search.
    Returns:
        Dictionary of lists with the following keys: anon, identifiable,
        pcpp_headers,  table_headers, table_footers.
    """
    
    soup = BeautifulSoup(text, 'lxml')
    
    anon_links = soup.find_all('a', href=anon_re)
    iden_links = soup.find_all('a', href=iden_re)
    pcpp_headers = soup.find_all('a', href=True, text='PCPartPicker Part List')

    table_headers = soup.find_all(pcpp_table_header)
    table_footers = soup.find_all('td', text=footer_re)
    
    return {'anon': anon_links, 'identifiable': iden_links,
            'pcpp_headers': pcpp_headers, 'table_headers': table_headers,
            'table_footers': table_footers}


def count_well_formed_tables(table_headers, table_footers):
    """Count the number of well-formed tables. """
    
    header_count = len(table_headers)
    footer_count = len(table_footers)

    # No header or footers -> no tables
    if header_count == 0 or footer_count == 0:
        return 0, 0

    # Should have a 1:1 ratio of header : footer
    paired = header_count / footer_count
    broken = abs(header_count - footer_count)
    
    return paired, broken
